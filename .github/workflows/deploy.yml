name: Deploy MkDocs with Mike

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  PYTHON_VERSION: '3.11'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for Mike
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Deploy main branch as 'latest'
        if: github.ref == 'refs/heads/main'
        run: |
          # Deploy main branch as 'latest' and 'dev'
          mike deploy --push --update-aliases dev latest
          mike set-default --push latest
          
      - name: Deploy tagged version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Deploying version: $VERSION"
          
          # Deploy the tagged version and update 'stable' alias
          mike deploy --push --update-aliases $VERSION stable
          
          # Set this version as the default if it's the latest
          mike set-default --push stable

  build-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build documentation
        run: |
          mkdocs build --strict
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mkdocs-site
          path: site/